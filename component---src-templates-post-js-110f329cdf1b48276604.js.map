{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["query","Post","render","this","props","className","_","get","htmlToReact","src","withPrefix","alt","randomImage","dateTime","moment","strftime","React","Component"],"mappings":"yRAWO,IAAMA,EAAK,aAQGC,E,gLACnBC,OAAA,WACE,OACE,kBAAC,IAAWC,KAAKC,MACf,6BAASC,UAAU,kBACjB,4BAAQA,UAAU,wBAChB,wBAAIA,UAAU,wBACXC,IAAEC,IAAIJ,KAAKC,MAAO,gCAAiC,OAErDE,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,OACrD,yBAAKC,UAAU,iBACZG,YACCF,IAAEC,IAAIJ,KAAKC,MAAO,mCAAoC,SAK7DE,IAAEC,IACDJ,KAAKC,MACL,2CACA,MAEA,yBAAKC,UAAU,cACb,yBACEI,IAAKC,YACHJ,IAAEC,IACAJ,KAAKC,MACL,2CACA,OAGJO,IAAKL,IAAEC,IACLJ,KAAKC,MACL,0CACA,SAKN,yBAAKC,UAAU,cACb,yBAAKI,IAAG,WAAaG,YAAY,GAAzB,OAAmCD,IAAI,mBAGnD,yBAAKN,UAAU,yBACZG,YAAYF,IAAEC,IAAIJ,KAAKC,MAAO,mBAAoB,QAErD,4BAAQC,UAAU,sBAChB,0BACEA,UAAU,YACVQ,SAAUC,IACRR,IAAEC,IAAIJ,KAAKC,MAAO,+BAAgC,OAClDW,SAAS,mBAEVD,IACCR,IAAEC,IAAIJ,KAAKC,MAAO,+BAAgC,OAClDW,SAAS,sB,GAvDSC,IAAMC","file":"component---src-templates-post-js-110f329cdf1b48276604.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment-strftime\";\nimport { graphql } from \"gatsby\";\n\nimport { Layout } from \"../components/index\";\nimport { htmlToReact, withPrefix } from \"../utils\";\nimport {randomImage} from '../utils/helpers'\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: { eq: $url }) {\n      id\n    }\n  }\n`;\n\nexport default class Post extends React.Component {\n  render() {\n    return (\n      <Layout {...this.props}>\n        <article className=\"post post-full\">\n          <header className=\"post-header inner-sm\">\n            <h1 className=\"post-title underline\">\n              {_.get(this.props, \"pageContext.frontmatter.title\", null)}\n            </h1>\n            {_.get(this.props, \"pageContext.frontmatter.subtitle\", null) && (\n              <div className=\"post-subtitle\">\n                {htmlToReact(\n                  _.get(this.props, \"pageContext.frontmatter.subtitle\", null)\n                )}\n              </div>\n            )}\n          </header>\n          {_.get(\n            this.props,\n            \"pageContext.frontmatter.content_img_path\",\n            null\n          ) ? (\n            <div className=\"post-image\">\n              <img\n                src={withPrefix(\n                  _.get(\n                    this.props,\n                    \"pageContext.frontmatter.content_img_path\",\n                    null\n                  )\n                )}\n                alt={_.get(\n                  this.props,\n                  \"pageContext.frontmatter.content_img_alt\",\n                  null\n                )}\n              />\n            </div>\n          ) : (\n            <div className=\"post-image\">\n              <img src={`/images/${randomImage(5)}.jpg`} alt=\"Default image\" />\n            </div>\n          )}\n          <div className=\"post-content inner-sm\">\n            {htmlToReact(_.get(this.props, \"pageContext.html\", null))}\n          </div>\n          <footer className=\"post-meta inner-sm\">\n            <time\n              className=\"published\"\n              dateTime={moment(\n                _.get(this.props, \"pageContext.frontmatter.date\", null)\n              ).strftime(\"%Y-%m-%d %H:%M\")}\n            >\n              {moment(\n                _.get(this.props, \"pageContext.frontmatter.date\", null)\n              ).strftime(\"%A, %B %e, %Y\")}\n            </time>\n          </footer>\n        </article>\n      </Layout>\n    );\n  }\n}\n"],"sourceRoot":""}